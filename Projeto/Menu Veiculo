import java.util.List; 
import java.util.Scanner;
public class PrincipalVeiculo {
	public static void main(String[] args) {
        String nomeArquivo = "C:\\Users\\Adm\\OneDrive\\Área de Trabalho\\veiculo.txt"; // Nome do arquivo onde os veículos serão armazenados
        List<Veiculo> veiculos = Veiculo.lerVeiculosEmArquivo(nomeArquivo);
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println(" +------------- MENU DE VEÍCULOS ---------------+");
            System.out.println(" | Selecione uma das opções abaixo:             |");
            System.out.println(" | 1. Criar um  veículo                         |");
            System.out.println(" | 2. Ler veículo a partir de um arquivo        |");
            System.out.println(" | 3. Atualizar/editar veículo em arquivo       |");
            System.out.println(" | 4. Excluir um veículo                        |");
            System.out.println(" | 5. Listar/ler os veículos em tabela          |");
            System.out.println(" | 6. Mostrar estoque de um veículo atualizado  |");
            System.out.println(" | 7. Salvar em arquivo                         |");
            System.out.println(" | 8. Sair                                      |");
            System.out.println(" |             Escolha uma opção:               |");
            System.out.println(" +----------------------------------------------+");
            System.out.println();

            int opcao = scanner.nextInt();
            scanner.nextLine(); // Consumir a nova linha

            switch (opcao) {
                case 1:
                    System.out.println("Criar um veículo:");
                    System.out.print("Marca: ");
                    String marca = scanner.nextLine();
                    System.out.print("Modelo: ");
                    String modelo = scanner.nextLine();
                    System.out.print("Ano de Fabricação: ");
                    int anoDeFabricacao = scanner.nextInt();
                    scanner.nextLine(); // Consumir a nova linha
                    System.out.print("Cor: ");
                    String cor = scanner.nextLine();
                    System.out.print("Estado do Veículo: ");
                    String estadoDoVeiculo = scanner.nextLine();
                    System.out.print("Quantidade em Estoque: ");
                    int quantidade = scanner.nextInt();
                    scanner.nextLine(); // Consumir a nova linha

                    Veiculo.criarVeiculoEmArquivo(marca, modelo, anoDeFabricacao, cor, estadoDoVeiculo, quantidade, nomeArquivo);
                    break;
                case 2:
                    System.out.println("Ler veículo em arquivo:");
                    System.out.print("Marca do veículo: ");
                    marca = scanner.nextLine();
                    System.out.print("Modelo do veículo: ");
                    modelo = scanner.nextLine();

                    // Buscar e exibir o veículo em arquivo
                    Veiculo veiculoLido = buscarVeiculoEmArquivo(marca, modelo, nomeArquivo);
                    if (veiculoLido != null) {
                        veiculoLido.lerVeiculo();
                    } else {
                        System.out.println("Veículo não encontrado.");
                    }
                    break;
                case 3:
                    System.out.println("Atualizar veículo em arquivo:");
                    System.out.print("Marca do veículo a ser atualizado: ");
                    marca = scanner.nextLine();
                    System.out.print("Modelo do veículo a ser atualizado: ");
                    modelo = scanner.nextLine();

                    Veiculo veiculoAtualizar = buscarVeiculoEmArquivo(marca, modelo, nomeArquivo);
                    if (veiculoAtualizar != null) {
                        // Solicitar as atualizações dos campos
                        System.out.print("Nova Marca: ");
                        marca = scanner.nextLine();
                        System.out.print("Novo Modelo: ");
                        modelo = scanner.nextLine();
                        System.out.print("Novo Ano de Fabricação: ");
                        anoDeFabricacao = scanner.nextInt();
                        scanner.nextLine(); // Consumir a nova linha
                        System.out.print("Nova Cor: ");
                        cor = scanner.nextLine();
                        System.out.print("Novo Estado do Veículo: ");
                        estadoDoVeiculo = scanner.nextLine();
                        System.out.print("Nova Quantidade em Estoque: ");
                        quantidade = scanner.nextInt();
                        scanner.nextLine(); // Consumir a nova linha

                        // Atualizar o veículo
                        veiculoAtualizar.setMarca(marca);
                        veiculoAtualizar.setModelo(modelo);
                        veiculoAtualizar.setAnoDeFabricacao(anoDeFabricacao);
                        veiculoAtualizar.setCor(cor);
                        veiculoAtualizar.setEstadoDoVeiculo(estadoDoVeiculo);
                        veiculoAtualizar.setQuantidade(quantidade);

                        // Atualizar no arquivo
                        veiculoAtualizar.atualizarVeiculoEmArquivo(nomeArquivo);
                    } else {
                        System.out.println("Veículo não encontrado.");
                    }
                    break;
                case 4:
                    System.out.println("Excluir um veículo:");
                    System.out.print("Marca do veículo a ser excluído: ");
                    marca = scanner.nextLine();
                    System.out.print("Modelo do veículo a ser excluído: ");
                    modelo = scanner.nextLine();

                    Veiculo.excluirVeiculoEmArquivo(marca, modelo, nomeArquivo);
                    break;
                case 5:
                    System.out.println("Listar veículos:");
                    Veiculo.listarVeiculosEmArquivo(nomeArquivo);
                    Veiculo.imprimirVeiculosEmTabela(veiculos);
                    break;
                case 6:
                    System.out.println("Atualizar estoque de um veículo:");
                    System.out.print("Marca do veículo a ser atualizado: ");
                    marca = scanner.nextLine();
                    System.out.print("Modelo do veículo a ser atualizado: ");
                    modelo = scanner.nextLine();
                    System.out.print("Quantidade a ser adicionada/subtraída: ");
                    int quantidadeAtualizacao = scanner.nextInt();
                    scanner.nextLine(); // Consumir a nova linha

                    Veiculo veiculoEstoque = buscarVeiculoEmArquivo(marca, modelo, nomeArquivo);
                    if (veiculoEstoque != null) {
                        veiculoEstoque.atualizarEstoqueEmArquivo(quantidadeAtualizacao, nomeArquivo);
                    } else {
                        System.out.println("Veículo não encontrado.");
                    }
                    break;
                case 7:
                    System.out.println("Saindo do programa.");
                    scanner.close();
                    System.exit(0);
                default:
                    System.out.println("Opção inválida. Por favor, escolha uma opção válida.");
            }
        }
    }

    private static Veiculo buscarVeiculoEmArquivo(String marca, String modelo, String nomeArquivo) {
        List<Veiculo> veiculos = Veiculo.lerVeiculosEmArquivo(nomeArquivo);
        for (Veiculo veiculo : veiculos) {
            if (veiculo.getMarca().equals(marca) && veiculo.getModelo().equals(modelo)) {
                return veiculo;
            }
        }
        return null;
    }
    
}

    
	
	    

