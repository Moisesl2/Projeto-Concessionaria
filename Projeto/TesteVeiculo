import java.util.Scanner;
public class Principal {
	 public static void main(String[] args) {
	        String nomeArquivo = "C:\\Users\\Adm\\OneDrive\\Área de Trabalho\\veiculo.txt"; // Nome do arquivo onde os veículos serão armazenados

	        Scanner scanner = new Scanner(System.in);

	        while (true) {
	            System.out.println(" +------------- MENU DE VEÍCULOS ------------+");
	            System.out.println(" | Selecione uma das opções abaixo:          |");
	            System.out.println(" | 1. Criar um veículo                       |");
	            System.out.println(" | 2. Ler veículo em arquivo                 |");
	            System.out.println(" | 3. Atualizar veículo em arquivo           |");
	            System.out.println(" | 4. Excluir um veículo                     |");
	            System.out.println(" | 5. Listar veículos                        |");
	            System.out.println(" | 6. Atualizar estoque de um veículo        |");
	            System.out.println(" | 7. Buscar veículo em arquivo              |");
	            System.out.println(" | 8. Sair                                   |");
	            System.out.println(" | Escolha uma opção:                        |");
	            System.out.println(" +-------------------------------------------+");
	            System.out.println();

	            int opcao = scanner.nextInt();
	            scanner.nextLine(); // Consumir a nova linha

	            switch (opcao) {
	                case 1:
	                    System.out.println("Criando um veículo:");
	                    System.out.print("Marca: ");
	                    String marca = scanner.nextLine();
	                    System.out.print("Modelo: ");
	                    String modelo = scanner.nextLine();
	                    System.out.print("Ano de Fabricação: ");
	                    int anoDeFabricacao = scanner.nextInt();
	                    scanner.nextLine(); // Consumir a nova linha
	                    System.out.print("Cor: ");
	                    String cor = scanner.nextLine();
	                    System.out.print("Estado do Veículo: ");
	                    String estadoDoVeiculo = scanner.nextLine();
	                    System.out.print("Quantidade em Estoque: ");
	                    int quantidade = scanner.nextInt();
	                    scanner.nextLine(); // Consumir a nova linha

	                    Veiculo.criarVeiculoEmArquivo(marca, modelo, anoDeFabricacao, cor, estadoDoVeiculo, quantidade, nomeArquivo);
	                    break;
	                case 2:
	                    System.out.println("Lendo veículo em arquivo:");
	                    System.out.print("Marca do veículo: ");
	                    marca = scanner.nextLine();
	                    System.out.print("Modelo do veículo: ");
	                    modelo = scanner.nextLine();

	                    // Buscar e exibir o veículo em arquivo
	                    Veiculo veiculoLido = Veiculo.buscarVeiculoEmArquivo(marca, modelo, nomeArquivo);
	                    if (veiculoLido != null) {
	                        veiculoLido.lerVeiculo();
	                    } else {
	                        System.out.println("Veículo não encontrado.");
	                    }
	                    break;
	                case 3:
	                    System.out.println("Atualizando veículo em arquivo:");
	                    System.out.print("Marca do veículo a ser atualizado: ");
	                    marca = scanner.nextLine();
	                    System.out.print("Modelo do veículo a ser atualizado: ");
	                    modelo = scanner.nextLine();

	                    Veiculo veiculoAtualizar = Veiculo.buscarVeiculoEmArquivo(marca, modelo, nomeArquivo);
	                    if (veiculoAtualizar != null) {
	                        // Solicitar as atualizações dos campos
	                        System.out.print("Nova Marca: ");
	                        marca = scanner.nextLine();
	                        System.out.print("Novo Modelo: ");
	                        modelo = scanner.nextLine();
	                        System.out.print("Novo Ano de Fabricação: ");
	                        anoDeFabricacao = scanner.nextInt();
	                        scanner.nextLine(); // Consumir a nova linha
	                        System.out.print("Nova Cor: ");
	                        cor = scanner.nextLine();
	                        System.out.print("Novo Estado do Veículo: ");
	                        estadoDoVeiculo = scanner.nextLine();
	                        System.out.print("Nova Quantidade em Estoque: ");
	                        quantidade = scanner.nextInt();
	                        scanner.nextLine(); // Consumir a nova linha

	                        // Atualizar o veículo
	                        veiculoAtualizar.setMarca(marca);
	                        veiculoAtualizar.setModelo(modelo);
	                        veiculoAtualizar.setAnoDeFabricacao(anoDeFabricacao);
	                        veiculoAtualizar.setCor(cor);
	                        veiculoAtualizar.setEstadoDoVeiculo(estadoDoVeiculo);
	                        veiculoAtualizar.setQuantidade(quantidade);

	                        // Perguntar se deseja excluir o veículo
	                        System.out.print("Deseja excluir o veículo? (S/N): ");
	                        String resposta = scanner.nextLine();
	                        if (resposta.equalsIgnoreCase("S")) {
	                            Veiculo.excluirVeiculoEmArquivo(marca, modelo, nomeArquivo);
	                            System.out.println("Veículo excluído.");
	                        } else {
	                            // Atualizar no arquivo
	                            veiculoAtualizar.atualizarVeiculoEmArquivo(nomeArquivo);
	                            System.out.println("Veículo atualizado.");
	                        }
	                    } else {
	                        System.out.println("Veículo não encontrado.");
	                    }
	                    break;

	                	
	                case 4:
	                    System.out.println("Excluindo um veículo:");
	                    System.out.print("Marca do veículo a ser excluído: ");
	                    marca = scanner.nextLine();
	                    System.out.print("Modelo do veículo a ser excluído: ");
	                    modelo = scanner.nextLine();

	                    Veiculo.excluirVeiculoEmArquivo(marca, modelo, nomeArquivo);
	                    break;
	                case 5:
	                    System.out.println("Listando veículos:");
	                    Veiculo.listarVeiculosEmArquivo(nomeArquivo);
	                    break;
	                case 6:
	              
	                    System.out.println("Atualizando estoque de um veículo:");
	                    System.out.print("Marca do veículo a ser atualizado: ");
	                    marca = scanner.nextLine();
	                    System.out.print("Modelo do veículo a ser atualizado: ");
	                    modelo = scanner.nextLine();
	                    System.out.print("Quantidade a ser adicionada ou subtraída: ");
	                    int quantidadeAtualizacao = scanner.nextInt();
	                    scanner.nextLine(); // Consumir a nova linha

	                    Veiculo veiculoEstoque = Veiculo.buscarVeiculoEmArquivo(marca, modelo, nomeArquivo);
	                    if (veiculoEstoque != null) {
	                        System.out.println("1. Adicionar ao estoque");
	                        System.out.println("2. Subtrair do estoque");
	                        System.out.print("Escolha uma opção (1 ou 2): ");
	                        int opcaoEstoque = scanner.nextInt();
	                        scanner.nextLine(); // Consumir a nova linha

	                        if (opcaoEstoque == 1) {
	                            veiculoEstoque.atualizarEstoqueEmArquivo(quantidadeAtualizacao, nomeArquivo);
	                            System.out.println("Estoque atualizado: " + veiculoEstoque.getQuantidade());
	                        } else if (opcaoEstoque == 2) {
	                            // Certifique-se de que o estoque não se torne negativo
	                            if (quantidadeAtualizacao <= veiculoEstoque.getQuantidade()) {
	                                veiculoEstoque.atualizarEstoqueEmArquivo(-quantidadeAtualizacao, nomeArquivo);
	                                System.out.println("Estoque atualizado: " + veiculoEstoque.getQuantidade());
	                            } else {
	                                System.out.println("Quantidade a ser subtraída é maior que o estoque atual.");
	                            }
	                        } else {
	                            System.out.println("Opção inválida.");
	                        }
	                    } else {
	                        System.out.println("Veículo não encontrado.");
	                    }
	                    break;  	
	                	
	                case 7:
	                    System.out.println("Buscando veículo em arquivo:");
	                    System.out.print("Marca do veículo: ");
	                    String marca1 = scanner.nextLine();
	                    System.out.print("Modelo do veículo: ");
	                    String modelo1 = scanner.nextLine();
	                    // Buscar e exibir o veículo em arquivo
	                    Veiculo veiculoLido1 = Veiculo.buscarVeiculoEmArquivo(marca1, modelo1, nomeArquivo);
	                    if (veiculoLido1 != null) {
	                        veiculoLido1.lerVeiculo();
	                    } else {
	                        System.out.println("Veículo não encontrado.");
	                    }
	                    break;
	                case 8:
	                    System.out.println("Saindo do programa.");
	                    scanner.close();
	                    System.exit(0);
	                default:
	                    System.out.println("Opção inválida. Por favor, escolha uma opção válida.");
	            }
	        }
	 }

}
	


	

